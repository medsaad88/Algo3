FUNCTION dot_product(v1, v2 : ARRAY_OF FLOAT[2]) : FLOAT ;
VAR
    PS: FLOAT;
    i,j : INTEGER;
BEGIN
    read (V1);
    read (V2);
    FOR i FROM 0 TO v1.length STEP 1  DO
        FOR j FROM 0 TO v2.length STEP 1  DO
            IF (i=j) THEN
                PS := PS + v1[i] * v2[j] ;
            END_IF
        END_FOR
    END_FOR    
    RETURN PS;
END

PROCEDURE dot_product (v1,v2 : ARRAY_OF FLOAT[2])
VAR
    i,j: INTEGER;
    PS : FLOAT;
BEGIN
    read (V1);
    read (V2);
    FOR i FROM 0 TO v1.length STEP 1  DO
        FOR j FROM 0 TO v2.length STEP 1  DO
            IF (i=j) THEN
                PS := PS + ( v1[i] * v2[j] );
            END_IF
        END_FOR
    END_FOR 
END

ALGORITHM Orthogonal_med
VAR
    v1, v2 : ARRAY_OF FLOAT;
    dotprod: INTEGER
BEGIN
    FOR i FROM 0 TO n STEP 1  DO
        read (v1);
        read (v2);
    END_FOR
    dotprod := dot_product (v1,v2);
    IF (dotprod=0) THEN
        write ("the two vectors are orthogonal");
    ELSE
        write ("the two vectors are not orthogonal");
    END_IF
END